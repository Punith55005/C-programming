#include<stdio.h>
#include <string.h>
#include <stdlib.h>

int clearmemory(void *p, size_t s);

int main(void)
{

    char str[10] = "Namaste";
    int values[10] = {1, 2, 3, 4, 5};

    printf("String was %s\n", str);
    for (int i = 0; i < 10; i++)
    {
        printf("Value[%d] was %d\n", i, values[i]);
    }
    printf("\n\n");

    clearmemory(str, strlen(str));
    clearmemory(values, sizeof values);

    printf("String is %s\n", str);
    for (int i = 0; i < 10; i++)
    {
        printf("Value[%d] is %d\n", i, values[i]);
    }

    return 0;
}

int clearmemory(void *p, size_t s)
{
    memset(p, 0, s);
}
p128
#include <stdio.h>

int main() {
    int *ptr;
    int num = 25
;
    ptr = &num;
    printf("Value of num: %d\n", *ptr);

    return 0;
}
p129
#include <stdio.h>

int main() {
    int num1, num2, sum;
    int *ptr1, *ptr2;
    printf("Enter first number: ");
    scanf("%d", &num1);
    printf("Enter second number: ");
    scanf("%d", &num2);
    ptr1 = &num1;
    ptr2 = &num2;
    sum = *ptr1 + *ptr2;
    printf("Sum of %d and %d is %d\n", *ptr1, *ptr2, sum);

    return 0;
}
p130
#include <stdio.h>
void addNumbers(int *ptr1, int *ptr2) {
    *ptr1 = *ptr1 + *ptr2;
}

int main() {
    int num1, num2;
    printf("Enter first number: ");
    scanf("%d", &num1);
    printf("Enter second number: ");
    scanf("%d", &num2);
    addNumbers(&num1, &num2);
     printf("Sum of the numbers is: %d\n", num1);

    return 0;
}
p131// Function to find the maximum between two numbers using pointers

#include <stdio.h>
int findMaximum(int *ptr1, int *ptr2) {
    if (*ptr1 > *ptr2) {
        return *ptr1;
    } else {
        return *ptr2;
    }
}

int main() {
    int num1, num2;
    printf("Enter first number: ");
    scanf("%d", &num1);
    printf("Enter second number: ");
    scanf("%d", &num2);
    int max = findMaximum(&num1, &num2);
    printf("Maximum between %d and %d is: %d\n", num1, num2, max);

    return 0;
}

p132
#include <stdio.h>

int main() {
    int n;
    printf("Enter the number of elements: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d elements:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    int *ptr = arr;
    printf("Elements stored in the array:\n");
    for (int i = 0; i < n; i++) {
        printf("%d ", *ptr);
        ptr++;
    }

    printf("\n");

    return 0;
}
p133//WAP to calculate the length of the string using a pointer.
#include <stdio.h>
int stringLength(const char *str) {
    int length = 0;
    while (*str != '\0') {
        length++;
        str++;
    }

    return length;
}

int main() {
    char inputString[100];
    printf("Enter a string: ");
    scanf("%s", inputString);
    int length = stringLength(inputString);
    printf("Length of the string is: %d\n", length);

    return 0;
}


p134
#include <stdio.h>

void swap(int *ptr1, int *ptr2) {
    int temp = *ptr1;
    *ptr1 = *ptr2;
    *ptr2 = temp;
}

int main() {
    int num1, num2;

    printf("Enter the first number: ");
    scanf("%d", &num1);

    printf("Enter the second number: ");
    scanf("%d", &num2);

    printf("Before swapping:\n");
    printf("First number: %d\n", num1);
    printf("Second number: %d\n", num2);

    int *ptr1 = &num1;
    int *ptr2 = &num2;
    swap(ptr1, ptr2);

    printf("After swapping:\n");
    printf("First number: %d\n", num1);
    printf("Second number: %d\n", num2);

    return 0;
}
p135
#include <stdio.h>

void findFactorial(int num, long long *result) {
    *result = 1LL;

    for (int i = 1; i <= num; i++) {
        *result *= i; // Multiply result by i
    }
}

int main() {
    int number;
    long long factorial;

    printf("Enter a number: ");
    scanf("%d", &number);
    long long *ptr = &factorial;
    findFactorial(number, ptr);

    printf("Factorial of %d = %lld\n", number, factorial);

    return 0;
}
p136
 #include <stdio.h>

void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

void bubbleSort(int *arr, int size) {
    int i, j;
    for (i = 0; i < size - 1; i++) {
        for (j = 0; j < size - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                swap(&arr[j], &arr[j + 1]);
            }
        }
    }
}

int main() {
    int arr[] = {5, 2, 9, 1, 5, 6};
    int size = sizeof(arr) / sizeof(arr[0]);

    printf("Original array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }n
    bubbleSort(arr, size);

    printf("\nArray sorted in ascending order: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }

    return 0;
}
p137
#include <stdio.h>
int computeSum(int *arr, int size) {
    int sum = 0;

    for (int i = 0; i < size; i++) {
        sum += *(arr + i);
    }

    return sum;
}

int main() {
    int arr[] = {2 ,3 ,4 ,5 ,7 ,5,4};
    int size = sizeof(arr) / sizeof(arr[0]);
    int sum = computeSum(arr, size);

    printf("Sum of all elements in the array: %d\n", sum);

    return 0;
}
p138
#include <stdio.h>
void printReverse(int *arr, int size) {
    int *ptr = arr + size - 1;
    printf("Elements of the array in reverse order: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", *ptr);
        ptr--;
    }
    printf("\n");
}

int main() {
    int arr[] = {5,4,3,2,1};
    int size = sizeof(arr) / sizeof(arr[0]);
    printReverse(arr, size);

    return 0;
}
p139
#include <stdio.h>
#include <string.h>

void printReverseString(const char *str) {
    int length = strlen(str);
    const char *ptr = str + length - 1;

    printf("String in reverse order: ");
    while (ptr >= str) {
        putchar(*ptr);
        ptr--;
    }
    printf("\n");
}

int main() {
    const char *inputString = "htinup!";

    printReverseString(inputString);

    return 0;
}
p140
#include <stdio.h>

// Function to find the smallest number in an array using pointers
int findSmallest(int *arr, int size) {
    int smallest = *arr;
    int *ptr = arr + 1;

    for (int i = 1; i < size; i++) {
        if (*ptr < smallest) {
            smallest = *ptr;
        }
        ptr++;
    }

    return smallest;
}

int main() {
    int arr[] = {5, 2, 9, 1, 0, 6};
    int size = sizeof(arr) / sizeof(arr[0]);
    int smallest = findSmallest(arr, size);

    printf("The smallest number in the array is: %d\n", smallest);

    return 0;
}
p141
#include <stdio.h>
double calculateAverage(const double *arr, int size) {
    double sum = 0.0;

    for (int i = 0; i < size; i++) {
        sum += *(arr + i);
    }
    return sum / size;
}

int main() {
    double numbers[] = {5.5, 2.3, 9.7, 1.0, 5.1, 6.9};
    int size = sizeof(numbers) / sizeof(numbers[0]);
    double average = calculateAverage(numbers, size);

    printf("The average of the numbers is: %.2lf\n", average);

    return 0;
}




